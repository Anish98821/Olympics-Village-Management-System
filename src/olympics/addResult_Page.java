/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package olympics;

import connection.connection;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author anish
 */
public class addResult_Page extends javax.swing.JFrame {

        Connection con = null;
        PreparedStatement p = null;
        ResultSet rs = null;
        String query;
        
        String[] col = {"Event ID","Gold","Silver","Bronze"};
        String[][] data = {};
        
        String eventId;
        String goldAth;
        String silverAth;
        String bronzeAth;
        DefaultTableModel model;

    /**
     * Creates new form addResult
     */
         public void close(){
        WindowEvent we = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(we);
        
    }
    void updateTable()
    {
        try{
            query = String.format("select name from athletes a,results r where a.athlete_id = r.athlete_id");
            p = con.prepareStatement(query);      
            ResultSet goldWinner = p.executeQuery();
            
            query = String.format("select * from results");
            p = con.prepareStatement(query);      
            ResultSet silverWinner = p.executeQuery();
            
            query = String.format("select * from results");
            p = con.prepareStatement(query);      
            ResultSet bronzeWinner = p.executeQuery();
            
       ////////////////////////////ADDING ROW IN TABLE///////////////////////////////////
            while(rs.next())
           {
               eventId = rs.getString("event_id");
               goldAth = rs.getString("gold");
               silverAth = rs.getString("silver");
               bronzeAth = rs.getString("bronze");
               model.addRow(new String[]{eventId,goldAth,silverAth,bronzeAth});
           }
        }
        catch (SQLException e)
        {}
    }
    public addResult_Page() {
        initComponents();
        
        model = (DefaultTableModel) jTable1.getModel();
        
        
        /////////////////Empty Table//////////////////////
        for (int i = jTable1.getRowCount() - 1; i >= 0; i--) {
        model.removeRow(i);
        }
        //////////////////////////////////////////////////
        
        
        
     con = connection.connectDB();
        
        //////////////////GETTING REQUIRED DATA TO UPDATE UI////////////////////////////
        
        try {
            String query = String.format("select * from events");
            p = con.prepareStatement(query);      
            rs = p.executeQuery();

           while(rs.next())
           {
               SelectEvent.addItem(rs.getString("name") + " - " + rs.getString("event_id"));
           }
           
       //////////////////////////GETTING DATA FOR TABLE//////////////////////////////////////    
            query = String.format("select e.name, e.event_id, gold, silver, bronze from results r, events e where r.event_id = e.event_id");
            p = con.prepareStatement(query);      
            rs = p.executeQuery();
            
            ResultSet rs1;
            
       ////////////////////////////ADDING ROW IN TABLE///////////////////////////////////
           while(rs.next())
           {
               eventId = rs.getString("name");

            
               goldAth = rs.getString("gold");
               silverAth = rs.getString("silver");
               bronzeAth = rs.getString("bronze");
               model.addRow(new String[]{eventId,goldAth,silverAth,bronzeAth});
           }
       ///////////////////////////////////////////////////////////////////////////////////
           }
           
            
        
 
        // Catch block to handle exception
        catch (SQLException e) {
            System.out.println(e);

        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        Data = new javax.swing.JPanel();
        whiteBackground = new javax.swing.JPanel();
        SelectEvent = new javax.swing.JComboBox<>();
        Gold = new javax.swing.JTextField();
        Silver = new javax.swing.JTextField();
        Bronze = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bronzeStatusName = new javax.swing.JLabel();
        bronzeStatusCont = new javax.swing.JLabel();
        bronzeStatusEvt = new javax.swing.JLabel();
        bronzeGet = new javax.swing.JButton();
        SilverStatusName = new javax.swing.JLabel();
        SilverStatusCont = new javax.swing.JLabel();
        SilverStatusEvt = new javax.swing.JLabel();
        SilverGet = new javax.swing.JButton();
        goldStatusName = new javax.swing.JLabel();
        goldStatusCont = new javax.swing.JLabel();
        goldStatusEvt = new javax.swing.JLabel();
        goldGet = new javax.swing.JButton();
        status = new javax.swing.JLabel();
        Submit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        organiserSidebar = new javax.swing.JPanel();
        logout = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        athleteSection = new javax.swing.JButton();
        eventSection = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        header = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setSize(new java.awt.Dimension(1920, 1080));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        Data.setBackground(new java.awt.Color(255, 204, 0));

        whiteBackground.setBackground(new java.awt.Color(252, 239, 186));

        SelectEvent.setBackground(new java.awt.Color(255, 255, 240));
        SelectEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectEventActionPerformed(evt);
            }
        });

        Gold.setBackground(new java.awt.Color(255, 255, 240));
        Gold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoldActionPerformed(evt);
            }
        });
        Gold.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                GoldPropertyChange(evt);
            }
        });

        Silver.setBackground(new java.awt.Color(255, 255, 240));
        Silver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SilverActionPerformed(evt);
            }
        });

        Bronze.setBackground(new java.awt.Color(255, 255, 240));
        Bronze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BronzeActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(130, 146, 149));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(130, 146, 149));
        jLabel1.setText("2nd Place");

        jLabel2.setBackground(new java.awt.Color(130, 146, 149));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(130, 146, 149));
        jLabel2.setText("1st Place ");

        jLabel3.setBackground(new java.awt.Color(130, 146, 149));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(130, 146, 149));
        jLabel3.setText("3rd Place");

        jLabel4.setBackground(new java.awt.Color(130, 146, 149));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(130, 146, 149));
        jLabel4.setText("Event");

        bronzeStatusName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bronzeStatusName.setForeground(new java.awt.Color(102, 102, 102));
        bronzeStatusName.setText(" ");

        bronzeStatusCont.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bronzeStatusCont.setForeground(new java.awt.Color(102, 102, 102));
        bronzeStatusCont.setText(" ");

        bronzeStatusEvt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bronzeStatusEvt.setForeground(new java.awt.Color(102, 102, 102));
        bronzeStatusEvt.setText(" ");

        bronzeGet.setBackground(new java.awt.Color(252, 177, 49));
        bronzeGet.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bronzeGet.setForeground(new java.awt.Color(255, 255, 255));
        bronzeGet.setText("Get data");
        bronzeGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bronzeGetActionPerformed(evt);
            }
        });

        SilverStatusName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        SilverStatusName.setForeground(new java.awt.Color(102, 102, 102));
        SilverStatusName.setText(" ");

        SilverStatusCont.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        SilverStatusCont.setForeground(new java.awt.Color(102, 102, 102));
        SilverStatusCont.setText(" ");

        SilverStatusEvt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        SilverStatusEvt.setForeground(new java.awt.Color(102, 102, 102));
        SilverStatusEvt.setText(" ");

        SilverGet.setBackground(new java.awt.Color(252, 177, 49));
        SilverGet.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        SilverGet.setForeground(new java.awt.Color(255, 255, 255));
        SilverGet.setText("Get data");
        SilverGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SilverGetActionPerformed(evt);
            }
        });

        goldStatusName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        goldStatusName.setForeground(new java.awt.Color(255, 102, 102));
        goldStatusName.setText(" ");

        goldStatusCont.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        goldStatusCont.setForeground(new java.awt.Color(102, 102, 102));
        goldStatusCont.setText(" ");

        goldStatusEvt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        goldStatusEvt.setForeground(new java.awt.Color(102, 102, 102));
        goldStatusEvt.setText(" ");

        goldGet.setBackground(new java.awt.Color(252, 177, 49));
        goldGet.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        goldGet.setForeground(new java.awt.Color(255, 255, 255));
        goldGet.setText("Get data");
        goldGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goldGetActionPerformed(evt);
            }
        });

        status.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        status.setForeground(new java.awt.Color(0, 153, 102));
        status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Submit.setBackground(new java.awt.Color(252, 177, 49));
        Submit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Submit.setForeground(new java.awt.Color(255, 255, 255));
        Submit.setActionCommand("SUBMIT");
        Submit.setLabel("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout whiteBackgroundLayout = new javax.swing.GroupLayout(whiteBackground);
        whiteBackground.setLayout(whiteBackgroundLayout);
        whiteBackgroundLayout.setHorizontalGroup(
            whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(whiteBackgroundLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(whiteBackgroundLayout.createSequentialGroup()
                            .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(bronzeStatusEvt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bronzeStatusName, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bronzeStatusCont, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bronzeGet))
                        .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(whiteBackgroundLayout.createSequentialGroup()
                                .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SilverStatusEvt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SilverStatusName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SilverStatusCont, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(SilverGet))
                            .addComponent(Silver, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Bronze, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(whiteBackgroundLayout.createSequentialGroup()
                                    .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(goldStatusEvt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(goldStatusName, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(goldStatusCont, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(goldGet))
                                .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Gold, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, whiteBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
            .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(whiteBackgroundLayout.createSequentialGroup()
                    .addGap(43, 43, 43)
                    .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SelectEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(46, Short.MAX_VALUE)))
        );
        whiteBackgroundLayout.setVerticalGroup(
            whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, whiteBackgroundLayout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Gold, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(whiteBackgroundLayout.createSequentialGroup()
                        .addComponent(goldStatusName, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goldStatusCont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goldStatusEvt, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(whiteBackgroundLayout.createSequentialGroup()
                        .addComponent(goldGet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Silver, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SilverGet)
                    .addGroup(whiteBackgroundLayout.createSequentialGroup()
                        .addComponent(SilverStatusName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SilverStatusCont)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SilverStatusEvt)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Bronze, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bronzeGet)
                    .addGroup(whiteBackgroundLayout.createSequentialGroup()
                        .addComponent(bronzeStatusName, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bronzeStatusCont)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bronzeStatusEvt)))
                .addGap(51, 51, 51)
                .addComponent(Submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
            .addGroup(whiteBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(whiteBackgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(SelectEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(575, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout DataLayout = new javax.swing.GroupLayout(Data);
        Data.setLayout(DataLayout);
        DataLayout.setHorizontalGroup(
            DataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DataLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(whiteBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        DataLayout.setVerticalGroup(
            DataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DataLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(whiteBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTable1.setBackground(new java.awt.Color(255, 255, 240));
        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTable1.setForeground(new java.awt.Color(102, 102, 102));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"TE", "ET", "Et", "ET"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Event", "Gold Athlete", "Silver Athlete", "Bronze Athlete"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(32);
        jTable1.setSelectionBackground(new java.awt.Color(255, 255, 240));
        jTable1.setSelectionForeground(new java.awt.Color(102, 102, 102));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(Data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(270, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(356, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        organiserSidebar.setBackground(new java.awt.Color(252, 177, 49));

        logout.setBackground(new java.awt.Color(153, 153, 153));
        logout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 204, 153));

        jPanel22.setBackground(new java.awt.Color(255, 255, 240));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/rings2(1).png"))); // NOI18N
        jLabel11.setToolTipText("");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("OLYMPICS");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel11))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel12)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 240));

        athleteSection.setBackground(new java.awt.Color(130, 146, 149));
        athleteSection.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        athleteSection.setForeground(new java.awt.Color(255, 255, 240));
        athleteSection.setText("Athlete Section");
        athleteSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                athleteSectionActionPerformed(evt);
            }
        });

        eventSection.setBackground(new java.awt.Color(130, 146, 149));
        eventSection.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        eventSection.setForeground(new java.awt.Color(255, 255, 255));
        eventSection.setText("Events Section");
        eventSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventSectionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventSection, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(athleteSection, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(athleteSection, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eventSection, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(294, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("version 3.14");

        javax.swing.GroupLayout organiserSidebarLayout = new javax.swing.GroupLayout(organiserSidebar);
        organiserSidebar.setLayout(organiserSidebarLayout);
        organiserSidebarLayout.setHorizontalGroup(
            organiserSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, organiserSidebarLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(organiserSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
            .addGroup(organiserSidebarLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(organiserSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        organiserSidebarLayout.setVerticalGroup(
            organiserSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(organiserSidebarLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        header.setBackground(new java.awt.Color(130, 146, 149));

        jPanel30.setBackground(new java.awt.Color(255, 255, 240));

        jLabel13.setBackground(new java.awt.Color(255, 255, 240));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(193, 141, 107));
        jLabel13.setText("Add Results");
        jLabel13.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(579, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(organiserSidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(organiserSidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1293, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BronzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BronzeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BronzeActionPerformed

    private void SelectEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectEventActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_SelectEventActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        try
        {
            /////////////////Getting Event-id/////////////////////////////
            query = String.format("select event_id from events where name = '%s'",SelectEvent.getSelectedItem().toString().split(" ",2)[0]);
            
            
            p = con.prepareStatement(query);      
            rs = p.executeQuery();
            rs.next();
            String eventId = rs.getString("event_id");   
            
            
            //////////////////////Getting other inputs/////////////////
            String bronzeCountry = Bronze.getText();
            String goldCountry = Gold.getText();
            String silverCountry = Silver.getText();
            //////////////////////////////////////////////////////////////
             query = String.format("select event_id from athletes where athlete_id = '%s'",bronzeCountry);
            p = con.prepareStatement(query);      
            rs = p.executeQuery();
            rs.next();
            if(!rs.getString("event_id").equals(eventId)){
            throw new Exception("Athlete Event mismatch");
            } 
                         query = String.format("select event_id from athletes where athlete_id = '%s'",silverCountry);
            p = con.prepareStatement(query);      
            rs = p.executeQuery();
            rs.next();
            if(!rs.getString("event_id").equals(eventId)){
            throw new Exception("Athlete Event mismatch");
            }  
                         query = String.format("select event_id from athletes where athlete_id = '%s'",goldCountry);
            p = con.prepareStatement(query);      
            rs = p.executeQuery();
            rs.next();
            if(!rs.getString("event_id").equals(eventId)){
            throw new Exception("Athlete Event mismatch");
            }  
            /////////////////////Inserting into db///////////////////////
            
            query = String.format("insert into results values('%s','%s','%s','%s')", eventId,goldCountry,silverCountry,bronzeCountry);
            p = con.prepareStatement(query);      
            p.executeUpdate();
            
           ///////////////////////UI UPDATES/////////////////////////////
           status.setText("Added result!");
           status.setForeground(new Color(0,100,0));
           query = String.format("select e.name,gold,silver,bronze from results r, events e where r.event_id = e.event_id");
            p = con.prepareStatement(query);      
            rs = p.executeQuery();
        for (int i = jTable1.getRowCount() - 1; i >= 0; i--) {
            
        model.removeRow(i);
        }
            while(rs.next())
           {
               eventId = rs.getString("name");
               goldAth = rs.getString("gold");
               silverAth = rs.getString("silver");
               bronzeAth = rs.getString("bronze");
               model.addRow(new String[]{eventId,goldAth,silverAth,bronzeAth});
           }
           
        }
        
        catch(java.sql.SQLIntegrityConstraintViolationException e)
        {
             System.out.print(e);
              status.setText("Invalid or Duplicate Data! ");
              status.setForeground(Color.red);
        }
        catch(Exception e)
        {
            status.setForeground(Color.red);
            if(e.getMessage().equals("Athlete Event mismatch"))
                status.setText(e.getMessage());
            else
                status.setText("Invalid Data"); 
            System.out.print(e);
        }


    }//GEN-LAST:event_SubmitActionPerformed

    private void SilverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SilverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SilverActionPerformed

    private void bronzeGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bronzeGetActionPerformed
        try{
        query = String.format("select a.name,country,e.name event from athletes a, events e where athlete_id = '%s' and a.event_id = e.event_id",Bronze.getText());
            p = con.prepareStatement(query);      
            rs = p.executeQuery();
            if(rs.next() != false){
            bronzeStatusName.setText("Name: " + rs.getString("name").toUpperCase());
            bronzeStatusCont.setText("Country: "+ rs.getString("country").toUpperCase());
            bronzeStatusEvt.setText("Event: "+ rs.getString("event"));
            bronzeStatusName.setForeground(new Color(102,102,102));
            }
            else
            {
                bronzeStatusName.setForeground(new Color(255,102,102));
            bronzeStatusName.setText("INVALID ATHLETE ID");
            bronzeStatusCont.setText("");
            bronzeStatusEvt.setText("");
            }
        }
        catch(SQLException e)
        {
        System.out.println(e);
        }
    }//GEN-LAST:event_bronzeGetActionPerformed

    private void SilverGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SilverGetActionPerformed
        try{
        query = String.format("select a.name,country,e.name event from athletes a, events e where athlete_id = '%s' and a.event_id = e.event_id",Silver.getText());
            p = con.prepareStatement(query);      
            rs = p.executeQuery();
            if(rs.next() != false){
            SilverStatusName.setText("Name: " + rs.getString("name").toUpperCase());
            SilverStatusCont.setText("Country: "+ rs.getString("country").toUpperCase());
            SilverStatusEvt.setText("Event: "+ rs.getString("event"));
            SilverStatusName.setForeground(new Color(102,102,102));
            }
            else
            {
                SilverStatusName.setForeground(new Color(255,102,102));
            SilverStatusName.setText("INVALID ATHLETE ID");
            SilverStatusCont.setText("");
            SilverStatusEvt.setText("");
            }
        }
        catch(SQLException e)
        {
        System.out.println(e);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_SilverGetActionPerformed

    private void goldGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goldGetActionPerformed
        try{
        query = String.format("select a.name,country,e.name event from athletes a, events e where athlete_id = '%s' and a.event_id = e.event_id",Gold.getText());
            p = con.prepareStatement(query);      
            rs = p.executeQuery();
            if(rs.next() != false){
            goldStatusName.setText("Name: " + rs.getString("name").toUpperCase());
            goldStatusCont.setText("Country: "+ rs.getString("country").toUpperCase());
            goldStatusEvt.setText("Event: "+ rs.getString("event"));
             goldStatusName.setForeground(new Color(102,102,102));
            }
            else
            {
                
            goldStatusName.setForeground(new Color(255,102,102));
            goldStatusName.setText("INVALID ATHLETE ID");
            goldStatusCont.setText("");
            goldStatusEvt.setText("");
            }
        }
        catch(SQLException e)
        {
        System.out.println(e);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_goldGetActionPerformed

    private void athleteSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_athleteSectionActionPerformed
        close();
        new athleteSection_Page().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_athleteSectionActionPerformed

    private void eventSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventSectionActionPerformed

        close();
        new eventSection_Page().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_eventSectionActionPerformed

    private void GoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GoldActionPerformed

    private void GoldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_GoldPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_GoldPropertyChange

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        close();
        new loginPage().setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addResult_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addResult_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addResult_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addResult_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addResult_Page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Bronze;
    private javax.swing.JPanel Data;
    private javax.swing.JTextField Gold;
    private javax.swing.JComboBox<String> SelectEvent;
    private javax.swing.JTextField Silver;
    private javax.swing.JButton SilverGet;
    private javax.swing.JLabel SilverStatusCont;
    private javax.swing.JLabel SilverStatusEvt;
    private javax.swing.JLabel SilverStatusName;
    private javax.swing.JButton Submit;
    private javax.swing.JButton athleteSection;
    private javax.swing.JButton bronzeGet;
    private javax.swing.JLabel bronzeStatusCont;
    private javax.swing.JLabel bronzeStatusEvt;
    private javax.swing.JLabel bronzeStatusName;
    private javax.swing.JButton eventSection;
    private javax.swing.JButton goldGet;
    private javax.swing.JLabel goldStatusCont;
    private javax.swing.JLabel goldStatusEvt;
    private javax.swing.JLabel goldStatusName;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logout;
    private javax.swing.JPanel organiserSidebar;
    private javax.swing.JLabel status;
    private javax.swing.JPanel whiteBackground;
    // End of variables declaration//GEN-END:variables
}
